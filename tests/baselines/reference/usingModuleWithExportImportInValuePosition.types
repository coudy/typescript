=== tests/cases/compiler/usingModuleWithExportImportInValuePosition.ts ===
Line 0 col 7 IdentifierName "A" = A
Line 1 col 11 IdentifierName "x" = string
Line 2 col 13 IdentifierName "Point" = Point
Line 3 col 27 IdentifierName "x" = number
Line 3 col 45 IdentifierName "y" = number
Line 5 col 18 IdentifierName "B" = B
Line 6 col 25 IdentifierName "Id" = Id
Line 7 col 0 IdentifierName "name" = string
Line 11 col 7 IdentifierName "C" = C
Line 12 col 18 IdentifierName "a" = a
Line 12 col 22 IdentifierName "A" = a
Line 15 col 4 IdentifierName "a" = string
Line 15 col 16 MemberAccessExpression "C.a.x" = string
Line 15 col 16 MemberAccessExpression "C.a" = typeof A
Line 15 col 16 IdentifierName "C" = typeof C
Line 15 col 18 IdentifierName "a" = typeof A
Line 15 col 20 IdentifierName "x" = string
Line 16 col 4 IdentifierName "b" = { x: number; y: number; }
Line 16 col 9 IdentifierName "x" = number
Line 16 col 20 IdentifierName "y" = number
Line 16 col 35 ObjectCreationExpression "new C.a.Point(0, 0)" = A.Point
Line 16 col 39 MemberAccessExpression "C.a.Point" = typeof A.Point
Line 16 col 39 MemberAccessExpression "C.a" = typeof A
Line 16 col 39 IdentifierName "C" = typeof C
Line 16 col 41 IdentifierName "a" = typeof A
Line 16 col 43 IdentifierName "Point" = typeof A.Point
Line 17 col 4 IdentifierName "c" = { name: string; }
Line 17 col 9 IdentifierName "name" = string
Line 18 col 4 IdentifierName "c" = A.B.Id
Line 18 col 7 IdentifierName "C" = C
Line 18 col 9 IdentifierName "a" = C.a
Line 18 col 11 IdentifierName "B" = A.B
Line 18 col 13 IdentifierName "Id" = A.B.Id