=== tests/cases/compiler/genericCallbacksAndClassHierarchy.ts ===
Line 0 col 7 IdentifierName "M" = M
Line 1 col 21 IdentifierName "I" = I<T>
Line 1 col 23 IdentifierName "T" = T
Line 2 col 0 IdentifierName "subscribe" = (callback: (newValue: T) => void) => any
Line 2 col 18 IdentifierName "callback" = (newValue: T) => void
Line 2 col 29 IdentifierName "newValue" = T
Line 2 col 39 IdentifierName "T" = T
Line 4 col 17 IdentifierName "C1" = C1<T>
Line 4 col 20 IdentifierName "T" = T
Line 5 col 15 IdentifierName "value" = I<T>
Line 5 col 22 IdentifierName "I" = I<T>
Line 5 col 24 IdentifierName "T" = T
Line 7 col 17 IdentifierName "A" = A<T>
Line 7 col 19 IdentifierName "T" = T
Line 8 col 15 IdentifierName "dummy" = any
Line 10 col 17 IdentifierName "B" = B<T>
Line 10 col 19 IdentifierName "T" = T
Line 10 col 30 IdentifierName "C1" = C1<T>
Line 10 col 33 IdentifierName "A" = A<T>
Line 10 col 35 IdentifierName "T" = T
Line 11 col 17 IdentifierName "D" = D<T>
Line 11 col 19 IdentifierName "T" = T
Line 12 col 0 IdentifierName "_subscribe" = (viewModel: B<T>) => void
Line 12 col 19 IdentifierName "viewModel" = B<T>
Line 12 col 30 IdentifierName "B" = B<T>
Line 12 col 32 IdentifierName "T" = T
Line 13 col 16 IdentifierName "f" = (newValue: A<T>) => void
Line 13 col 20 ParenthesizedArrowFunctionExpression "(newValue: A<T>) => { }" = (newValue: A<T>) => void
Line 13 col 21 IdentifierName "newValue" = A<T>
Line 13 col 31 IdentifierName "A" = A<T>
Line 13 col 33 IdentifierName "T" = T
Line 15 col 16 IdentifierName "v" = I<A<T>>
Line 15 col 19 IdentifierName "I" = I<T>
Line 15 col 21 IdentifierName "A" = A<T>
Line 15 col 23 IdentifierName "T" = T
Line 15 col 29 MemberAccessExpression "viewModel.value" = I<A<T>>
Line 15 col 29 IdentifierName "viewModel" = B<T>
Line 15 col 39 IdentifierName "value" = I<A<T>>
Line 16 col 0 InvocationExpression "// both of these should work
            v.subscribe(f)" = any
Line 16 col 0 MemberAccessExpression "// both of these should work
            v.subscribe" = (callback: (newValue: A<T>) => void) => any
Line 16 col 0 IdentifierName "// both of these should work
            v" = I<A<T>>
Line 18 col 14 IdentifierName "subscribe" = (callback: (newValue: A<T>) => void) => any
Line 18 col 24 IdentifierName "f" = (newValue: A<T>) => void
Line 19 col 0 InvocationExpression "v.subscribe((newValue: A<T>) => { })" = any
Line 19 col 0 MemberAccessExpression "v.subscribe" = (callback: (newValue: A<T>) => void) => any
Line 19 col 0 IdentifierName "v" = I<A<T>>
Line 19 col 14 IdentifierName "subscribe" = (callback: (newValue: A<T>) => void) => any
Line 19 col 24 ParenthesizedArrowFunctionExpression "(newValue: A<T>) => { }" = (newValue: A<T>) => void
Line 19 col 25 IdentifierName "newValue" = A<T>
Line 19 col 35 IdentifierName "A" = A<T>
Line 19 col 37 IdentifierName "T" = T