=== tests/cases/compiler/genericCallWithOverloadedFunctionTypedArguments.ts ===
Line 3 col 7 IdentifierName "NonGenericParameter" = NonGenericParameter
Line 4 col 8 IdentifierName "a" = { (x: boolean): boolean; (x: string): string; }
Line 5 col 9 IdentifierName "x" = boolean
Line 6 col 9 IdentifierName "x" = string
Line 9 col 13 IdentifierName "foo4" = typeof foo4
Line 9 col 18 IdentifierName "cb" = { (x: boolean): boolean; (x: string): string; }
Line 9 col 29 IdentifierName "a" = { (x: boolean): boolean; (x: string): string; }
Line 10 col 15 IdentifierName "cb" = { (x: boolean): boolean; (x: string): string; }
Line 13 col 8 IdentifierName "r" = { (x: boolean): boolean; (x: string): string; }
Line 13 col 12 InvocationExpression "foo4(a)" = { (x: boolean): boolean; (x: string): string; }
Line 13 col 12 IdentifierName "foo4" = typeof foo4
Line 13 col 17 IdentifierName "a" = { (x: boolean): boolean; (x: string): string; }
Line 14 col 8 IdentifierName "r2" = { (x: boolean): boolean; (x: string): string; }
Line 14 col 13 InvocationExpression "foo4(<T>(x: T) => x)" = { (x: boolean): boolean; (x: string): string; }
Line 14 col 13 IdentifierName "foo4" = typeof foo4
Line 14 col 18 ParenthesizedArrowFunctionExpression "<T>(x: T) => x" = <T>(x: T) => T
Line 14 col 19 IdentifierName "T" = T
Line 14 col 22 IdentifierName "x" = T
Line 14 col 25 IdentifierName "T" = T
Line 14 col 31 IdentifierName "x" = T
Line 15 col 8 IdentifierName "r4" = { (x: boolean): boolean; (x: string): string; }
Line 15 col 13 InvocationExpression "foo4(x => x)" = { (x: boolean): boolean; (x: string): string; }
Line 15 col 13 IdentifierName "foo4" = typeof foo4
Line 15 col 18 SimpleArrowFunctionExpression "x => x" = (x: any) => any
Line 15 col 18 IdentifierName "x" = any
Line 15 col 23 IdentifierName "x" = any
Line 18 col 7 IdentifierName "GenericParameter" = GenericParameter
Line 19 col 13 IdentifierName "foo5" = typeof foo5
Line 19 col 18 IdentifierName "T" = T
Line 19 col 21 IdentifierName "cb" = { (x: T): string; (x: number): T; }
Line 19 col 28 IdentifierName "x" = T
Line 19 col 31 IdentifierName "T" = T
Line 19 col 44 IdentifierName "x" = number
Line 19 col 56 IdentifierName "T" = T
Line 20 col 15 IdentifierName "cb" = { (x: T): string; (x: number): T; }
Line 23 col 8 IdentifierName "r5" = { (x: any): string; (x: number): any; }
Line 23 col 13 InvocationExpression "foo5(x => x)" = { (x: any): string; (x: number): any; }
Line 23 col 13 IdentifierName "foo5" = typeof foo5
Line 23 col 18 SimpleArrowFunctionExpression "x => x" = (x: any) => any
Line 23 col 18 IdentifierName "x" = any
Line 23 col 23 IdentifierName "x" = any
Line 24 col 8 IdentifierName "a" = { <T>(x: T): string; <T>(x: number): T; }
Line 24 col 14 IdentifierName "T" = T
Line 24 col 17 IdentifierName "x" = T
Line 24 col 20 IdentifierName "T" = T
Line 24 col 33 IdentifierName "T" = T
Line 24 col 36 IdentifierName "x" = number
Line 24 col 48 IdentifierName "T" = T
Line 25 col 8 IdentifierName "r7" = { (x: any): string; (x: number): any; }
Line 25 col 13 InvocationExpression "foo5(a)" = { (x: any): string; (x: number): any; }
Line 25 col 13 IdentifierName "foo5" = typeof foo5
Line 25 col 18 IdentifierName "a" = { <T>(x: T): string; <T>(x: number): T; }
Line 27 col 13 IdentifierName "foo6" = typeof foo6
Line 27 col 18 IdentifierName "T" = T
Line 27 col 21 IdentifierName "cb" = { (x: T): string; (x: T, y?: T): string; }
Line 27 col 28 IdentifierName "x" = T
Line 27 col 31 IdentifierName "T" = T
Line 27 col 44 IdentifierName "x" = T
Line 27 col 47 IdentifierName "T" = T
Line 27 col 50 IdentifierName "y" = T
Line 27 col 54 IdentifierName "T" = T
Line 28 col 15 IdentifierName "cb" = { (x: T): string; (x: T, y?: T): string; }
Line 31 col 8 IdentifierName "r8" = { (x: any): string; (x: any, y?: any): string; }
Line 31 col 13 InvocationExpression "foo6(x => x)" = { (x: any): string; (x: any, y?: any): string; }
Line 31 col 13 IdentifierName "foo6" = typeof foo6
Line 31 col 18 SimpleArrowFunctionExpression "x => x" = (x: any) => any
Line 31 col 18 IdentifierName "x" = any
Line 31 col 23 IdentifierName "x" = any
Line 32 col 8 IdentifierName "r9" = { (x: any): string; (x: any, y?: any): string; }
Line 32 col 13 InvocationExpression "foo6(<T>(x: T) => '')" = { (x: any): string; (x: any, y?: any): string; }
Line 32 col 13 IdentifierName "foo6" = typeof foo6
Line 32 col 18 ParenthesizedArrowFunctionExpression "<T>(x: T) => ''" = <T>(x: T) => string
Line 32 col 19 IdentifierName "T" = T
Line 32 col 22 IdentifierName "x" = T
Line 32 col 25 IdentifierName "T" = T
Line 33 col 8 IdentifierName "r11" = { (x: any): string; (x: any, y?: any): string; }
Line 33 col 14 InvocationExpression "foo6(<T>(x: T, y?: T) => '')" = { (x: any): string; (x: any, y?: any): string; }
Line 33 col 14 IdentifierName "foo6" = typeof foo6
Line 33 col 19 ParenthesizedArrowFunctionExpression "<T>(x: T, y?: T) => ''" = <T>(x: T, y?: T) => string
Line 33 col 20 IdentifierName "T" = T
Line 33 col 23 IdentifierName "x" = T
Line 33 col 26 IdentifierName "T" = T
Line 33 col 29 IdentifierName "y" = T
Line 33 col 33 IdentifierName "T" = T
Line 35 col 13 IdentifierName "foo7" = typeof foo7
Line 35 col 18 IdentifierName "T" = T
Line 35 col 21 IdentifierName "x" = T
Line 35 col 23 IdentifierName "T" = T
Line 35 col 26 IdentifierName "cb" = { (x: T): string; (x: T, y?: T): string; }
Line 35 col 33 IdentifierName "x" = T
Line 35 col 36 IdentifierName "T" = T
Line 35 col 49 IdentifierName "x" = T
Line 35 col 52 IdentifierName "T" = T
Line 35 col 55 IdentifierName "y" = T
Line 35 col 59 IdentifierName "T" = T
Line 36 col 15 IdentifierName "cb" = { (x: T): string; (x: T, y?: T): string; }
Line 39 col 8 IdentifierName "r12" = { (x: any): string; (x: any, y?: any): string; }
Line 39 col 14 InvocationExpression "foo7(1, (x) => x)" = { (x: any): string; (x: any, y?: any): string; }
Line 39 col 14 IdentifierName "foo7" = typeof foo7
Line 39 col 22 ParenthesizedArrowFunctionExpression "(x) => x" = (x: any) => any
Line 39 col 23 IdentifierName "x" = any
Line 39 col 29 IdentifierName "x" = any
Line 40 col 8 IdentifierName "r13" = { (x: any): string; (x: any, y?: any): string; }
Line 40 col 14 InvocationExpression "foo7(1, <T>(x: T) => '')" = { (x: any): string; (x: any, y?: any): string; }
Line 40 col 14 IdentifierName "foo7" = typeof foo7
Line 40 col 22 ParenthesizedArrowFunctionExpression "<T>(x: T) => ''" = <T>(x: T) => string
Line 40 col 23 IdentifierName "T" = T
Line 40 col 26 IdentifierName "x" = T
Line 40 col 29 IdentifierName "T" = T
Line 41 col 8 IdentifierName "a" = { <T>(x: T): string; <T>(x: number): T; }
Line 41 col 14 IdentifierName "T" = T
Line 41 col 17 IdentifierName "x" = T
Line 41 col 20 IdentifierName "T" = T
Line 41 col 33 IdentifierName "T" = T
Line 41 col 36 IdentifierName "x" = number
Line 41 col 48 IdentifierName "T" = T
Line 42 col 8 IdentifierName "r14" = { (x: any): string; (x: any, y?: any): string; }
Line 42 col 14 InvocationExpression "foo7(1, a)" = { (x: any): string; (x: any, y?: any): string; }
Line 42 col 14 IdentifierName "foo7" = typeof foo7
Line 42 col 22 IdentifierName "a" = { <T>(x: T): string; <T>(x: number): T; }