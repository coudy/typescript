=== tests/cases/compiler/forStatements.ts ===
Line 0 col 10 IdentifierName "I" = I
Line 1 col 0 IdentifierName "id" = number
Line 4 col 6 IdentifierName "C" = C
Line 4 col 19 IdentifierName "I" = I
Line 5 col 0 IdentifierName "id" = number
Line 8 col 6 IdentifierName "D" = D<T>
Line 8 col 8 IdentifierName "T" = T
Line 9 col 0 IdentifierName "source" = T
Line 9 col 12 IdentifierName "T" = T
Line 10 col 0 IdentifierName "recurse" = D<T>
Line 10 col 13 IdentifierName "D" = D<T>
Line 10 col 15 IdentifierName "T" = T
Line 11 col 0 IdentifierName "wrapped" = D<D<T>>
Line 11 col 13 IdentifierName "D" = D<T>
Line 11 col 15 IdentifierName "D" = D<T>
Line 11 col 17 IdentifierName "T" = T
Line 14 col 9 IdentifierName "F" = typeof F
Line 14 col 11 IdentifierName "x" = string
Line 16 col 7 IdentifierName "M" = M
Line 17 col 17 IdentifierName "A" = A
Line 18 col 0 IdentifierName "name" = string
Line 21 col 20 IdentifierName "F2" = typeof F2
Line 21 col 23 IdentifierName "x" = number
Line 21 col 51 InvocationExpression "x.toString()" = string
Line 21 col 51 MemberAccessExpression "x.toString" = (radix?: number) => string
Line 21 col 51 IdentifierName "x" = number
Line 21 col 53 IdentifierName "toString" = (radix?: number) => string
Line 24 col 8 IdentifierName "aNumber" = number
Line 25 col 8 IdentifierName "aString" = string
Line 26 col 8 IdentifierName "aDate" = Date
Line 26 col 15 IdentifierName "Date" = Date
Line 26 col 22 ObjectCreationExpression "new Date(12)" = Date
Line 26 col 26 IdentifierName "Date" = { prototype: Date; parse(s: string): number; UTC(year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): number; now(): number; (): string; new(): Date; new(value: number): Date; new(value: string): Date; new(year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): Date; }
Line 27 col 8 IdentifierName "anObject" = Object
Line 27 col 18 IdentifierName "Object" = Object
Line 27 col 27 ObjectCreationExpression "new Object()" = Object
Line 27 col 31 IdentifierName "Object" = { prototype: Object; getPrototypeOf(o: any): any; getOwnPropertyDescriptor(o: any, p: string): PropertyDescriptor; getOwnPropertyNames(o: any): string[]; create(o: any, properties?: PropertyDescriptorMap): any; defineProperty(o: any, p: string, attributes: PropertyDescriptor): any; defineProperties(o: any, properties: PropertyDescriptorMap): any; seal(o: any): any; freeze(o: any): any; preventExtensions(o: any): any; isSealed(o: any): boolean; isFrozen(o: any): boolean; isExtensible(o: any): boolean; keys(o: any): string[]; (): any; (value: any): any; new(value?: any): Object; }
Line 29 col 8 IdentifierName "anAny" = any
Line 30 col 8 IdentifierName "aSecondAny" = any
Line 30 col 26 IdentifierName "undefined" = any
Line 31 col 8 IdentifierName "aVoid" = void
Line 31 col 22 IdentifierName "undefined" = any
Line 33 col 8 IdentifierName "anInterface" = I
Line 33 col 21 IdentifierName "I" = I
Line 33 col 25 ObjectCreationExpression "new C()" = C
Line 33 col 29 IdentifierName "C" = typeof C
Line 34 col 8 IdentifierName "aClass" = C
Line 34 col 16 IdentifierName "C" = C
Line 34 col 20 ObjectCreationExpression "new C()" = C
Line 34 col 24 IdentifierName "C" = typeof C
Line 35 col 8 IdentifierName "aGenericClass" = D<string>
Line 35 col 23 IdentifierName "D" = D<T>
Line 35 col 35 ObjectCreationExpression "new D<string>()" = D<string>
Line 35 col 39 IdentifierName "D" = typeof D
Line 36 col 8 IdentifierName "anObjectLiteral" = I
Line 36 col 25 IdentifierName "I" = I
Line 36 col 29 ObjectLiteralExpression "{ id: 12 }" = { id: number; }
Line 36 col 31 IdentifierName "id" = number
Line 37 col 8 IdentifierName "anOtherObjectLiteral" = { id: number; }
Line 37 col 32 IdentifierName "id" = number
Line 37 col 47 ObjectCreationExpression "new C()" = C
Line 37 col 51 IdentifierName "C" = typeof C
Line 39 col 8 IdentifierName "aFunction" = typeof F
Line 39 col 26 IdentifierName "F" = typeof F
Line 39 col 30 IdentifierName "F" = typeof F
Line 40 col 8 IdentifierName "anOtherFunction" = (x: string) => number
Line 40 col 26 IdentifierName "x" = string
Line 40 col 49 IdentifierName "F" = typeof F
Line 41 col 8 IdentifierName "aLambda" = typeof F
Line 41 col 24 IdentifierName "F" = typeof F
Line 41 col 28 ParenthesizedArrowFunctionExpression "(x) => 2" = (x: string) => number
Line 41 col 29 IdentifierName "x" = string
Line 43 col 8 IdentifierName "aModule" = typeof M
Line 43 col 24 IdentifierName "M" = typeof M
Line 43 col 28 IdentifierName "M" = typeof M
Line 44 col 8 IdentifierName "aClassInModule" = M.A
Line 44 col 24 IdentifierName "M" = M
Line 44 col 26 IdentifierName "A" = M.A
Line 44 col 30 ObjectCreationExpression "new M.A()" = M.A
Line 44 col 34 MemberAccessExpression "M.A" = typeof M.A
Line 44 col 34 IdentifierName "M" = typeof M
Line 44 col 36 IdentifierName "A" = typeof M.A
Line 45 col 8 IdentifierName "aFunctionInModule" = typeof M.F2
Line 45 col 34 IdentifierName "M" = typeof M
Line 45 col 36 IdentifierName "F2" = typeof M.F2
Line 45 col 41 ParenthesizedArrowFunctionExpression "(x) => 'this is a string'" = (x: number) => string
Line 45 col 42 IdentifierName "x" = number